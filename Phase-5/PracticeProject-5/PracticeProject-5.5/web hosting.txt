******** Kubernates Installation *********


***************Docker installation on Ubuntu OS *********************

> sudo apt-get update && sudo apt-get install ca-certificates curl gnupg lsb-release

>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

>echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list /dev/null

***** Install Docker Engine ***************
 > sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io

------------------------------------------------------------------
y

**** install kubernetes in ubantu ********

Update the apt package index and install packages needed to use the Kubernetes apt repository:

>sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl

Download the Google Cloud public signing key:

>sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

Add the Kubernetes apt repository:

> echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

Update apt package index, install kubelet, kubeadm and kubectl, and pin their version:

>sudo apt-get update && sudo apt-get install -y kubelet kubeadm kubectl && sudo apt-mark hold kubelet kubeadm kubectl

******check versions ******

kubeadm version

kubectl version

-----------------------------------------------------------------------------
initialize kubernates

>kubeadm init

if error then execute below commands

******disabling swap ******
>sudo swapoff -a && sudo sed -i '/ swap / s/^/#/' /etc/fstab 

******* adding cgroup*************

>sudo vi /etc/docker/daemon.json

press i

add below code
---------------------------
{
	"exec-opts":["native.cgroupdriver=systemd"]
}

press esc
:wq!
enter

>sudo systemctl daemon-reload && sudo systemctl restart docker && sudo systemctl restart kubelet
>sudo docker info | grep -i cgroup

again inialize kunernetes
----------------------------------

>sudo kubeadm init --ignore-preflight-errors=all

To start using your cluster, you need to run the following as a regular user:

 >mkdir -p $HOME/.kube
 >sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
 >sudo chown $(id -u):$(id -g) $HOME/.kube/config

validate that the node is up and running. That will help to deploy a Docker container to the Kubernetes cluster.

>kubectl get node
>kubectl get pods --all-namespaces

to get cluster ID
>kubectl get svc

--------------------------------------------------------------------------------------
host application 

 git clone https://github.com/sonam-niit/springboot-docker.git

 cd springboot-docker


//install maven
 sudo apt-get update && sudo apt install maven

//create jar
mvn clean install

//create docker image
sudo docker build -t springboot .

//check image
sudo docker images

//push to docker hub
sudo docker login
enter username and password

//create tag and push image
sudo docker tag springboot vaishnavidonade/springbootapp
sudo docker push vaishnavidonade/springbootapp

//run image and create pod
kubectl run myapp --image=vaishnavidonade/springbootapp --port=8081

//check pods
kubectl get pods

//create deployment service
kubectl expose pod/myapp --port=8081 --target-port=8081 --type=LoadBalancer

kubectl get services

kubectl describe svc myapp












